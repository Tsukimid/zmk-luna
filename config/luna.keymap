/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// layer definitions
#define LUNA 0
#define NUM 1
#define SRT 2
#define SFB 3
#define SYM 4
#define NAV 5
#define FUN 6
// -----------------

/ {
    combos {
        #include "combos.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";
                
        luna_layer {
            label = "LUNA";
            bindings = <
                &kp F &kp P     &kp D &kp W &key_repeat          &kp X &key_repeat &kp O       &kp U    &kp COMMA 
                &kp S &kp N     &kp T &kp C &kp Y                &kp M &kp H       &kp A       &kp E    &kp I
                      &lt SRT B &kp K &kp G                            &kp L       &key_repeat &sl SYM
                        &none  &lt NUM R                                 &lt NAV SPACE &none 
            >;
        };       
                 
        num_layer {
            label = "NUM";
            bindings = <
                &none      &kp TAB   &sk LALT  &kp DEL &kp LG(P)	    &none &kp N4 &kp N5 &kp N6 &none
                &sk LSHIFT &sk LCTRL &sk LGUI  &kp ESC &kp LG(Q)	    &none &kp N1 &kp N2 &kp N3 &sk LSHIFT
                           &kp LC(X) &kp LC(C) &kp LC(V) 	    	          &kp N7 &kp N8 &kp N9
                             &trans &trans                                      &kp N0 &none  
            >;
        };
                
        srt_layer {
            label = "SRT";
            bindings = <
                &none         &none &none           &none       &kp LC(Y)	    &none &none             &kp LA(LC(PG_UP)) &kp LA(LC(PG_DN)) &none
                &kp LS(LG(S)) &none &kp LC(LA(D))   &kp LG(TAB) &kp LC(Z)	    &none &kp LA(LC(LEFT))  &kp LA(LC(UP))    &kp LA(LC(DOWN))  &kp LA(LC(RIGHT)) 
                              &none &kp LC(LS(TAB)) &kp LC(TAB) 	    	          &kp LA(LC(SPACE)) &kp LA(UP)        &kp LA(DOWN)
                                &none  &trans                                           &trans &none
            >;
        }; 
        
        sfb_layer {
            label = "SFB";
            bindings = <
                &none &none &none &none &none	    &none &none &none &none &none
                &none &none &none &none &none	    &none &none &none &none &none
                      &none &none &none 	    	      &none &none &none
                        &none  &trans                       &trans &none  
            >;
        };      
                 
        sym_layer {
            label = "SYM";
            bindings = <
                &kp HASH &kp UNDER &kp EQUAL &kp AT  &kp CARET	    &kp PLUS &kp EXCL  &none    &none &none
                &kp FSLH &kp MINUS &kp GRAVE &kp SQT &kp STAR 	    &kp AMPS &kp QMARK &kp DQT  &none &none
                         &kp DLLR  &kp PIPE  &kp TILDE	    	             &kp PRCNT &kp BSLH &none
                           &none  &trans                                       &trans &none  
            >;
        };
                
        nav_layer {
            label = "NAV";
            bindings = <
                &none      &none        &none        &none    &none	    &none &kp K_PP &kp PG_UP    &kp PG_DN    &none
                &kp LSHIFT &kp LCTRL    &kp LGUI     &kp LALT &none	    &none &kp LEFT &kp UP       &kp DOWN     &kp RIGHT
                           &kp C_BRI_DN &kp C_BRI_UP &none 	       	          &none    &kp K_VOL_UP &kp K_VOL_DN
                            &none  &sl FUN                                      &trans &none  
            >;
        };       
                 
        fun_layer {
            label = "FUN";
            bindings = <
                &none &none &none &none &none	    &kp F12 &kp N4 &kp N5 &kp N6 &kp F11
                &none &none &none &none &none	    &none   &kp N1 &kp N2 &kp N3 &kp F10
                      &none &none &none 	    	        &kp N7 &kp N8 &kp N9
                        &none  &trans                         &trans &none  
            >;
        };
    };
};
